#!/bin/bash
[[ ! -n "${DTOKEN}" ]] || [[ ! -n "${DAPPID}" ]] && echo "Running outside module, exitting..." && exit 1

script_dir="$(dirname "$0")"

if [[ ! -d "${script_dir}/covers" ]]; then
  mkdir "${script_dir}/covers"
fi
if [[ -f "${script_dir}/cover.jpg" ]]; then
  rm -f "${script_dir}/cover.jpg"
fi

# get md5 string of song
md5_song=$(echo "$(cmus-remote -Q | grep file | cut -c 6-)" | md5sum | awk '{print $1}')

# check if song already added
if [[ -f "${script_dir}/covers/${md5_song}" ]]; then
  if [[ -f "${script_dir}/cover.jpg" ]]; then
    rm -f "${script_dir}/cover.jpg"
  fi
  exit 0
fi

# create first so it doesn't spam create
touch "${script_dir}/covers/${md5_song}"

# extract cover
ffmpeg -loglevel error -i "$(cmus-remote -Q | grep file | cut -c 6-)" -an -vcodec copy "${script_dir}/cover.jpg"

# resize + crop
# discord asset shown size is 84x84
convert -resize 200x "${script_dir}/cover.jpg" "${script_dir}/cover.jpg"
convert -gravity center -crop 1:1 "${script_dir}/cover.jpg" "${script_dir}/cover.jpg"

# convert to base64
b64_image=$(echo $(base64 "${script_dir}/cover.jpg") | sed 's/ //g')

# delete unused asset
. "${script_dir}/delete_unused_asset" && echo "Deleted" || echo "Failed"

# catch response
response=$(curl --silent -X POST \
  -H "Content-Type: application/json" \
  -H "Authorization: ${DTOKEN}" \
  -d '{"name":"'${md5_song}'","image":"data:image/jpg;base64,'${b64_image}'","type":"1"}' \
  https://canary.discord.com/api/v9/oauth2/applications/${DAPPID}/assets)

# remote file name
remote_id=$(jq <<< "${response}" .id | sed 's/"//g')

# save cover info
echo "${remote_id}" > "${script_dir}/covers/${md5_song}"

# cleanup
rm "${script_dir}/cover.jpg"
